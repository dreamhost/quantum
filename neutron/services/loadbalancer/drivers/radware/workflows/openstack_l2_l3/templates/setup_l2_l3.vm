
#property('description', 'Configures VLANs and L3 interface for data and HA networks - v1')

#param("data_port", "int", "in", "min=1", "max=2", "prompt=Data Port")
#param("data_ip_address", "ip", "in", "prompt=Data IP Address")
#param("data_ip_mask", "ip", "in", "prompt=Data IP Mask")
#param("gateway", "ip", "in", "prompt=Default Gateway IP Address")

#param("ha_enabled", "bool", "in", "prompt=HA Enabled?")
#param("ha_port", "int", "in", "min=1", "max=2", "prompt=HA Port")
#param("ha_ip_address", "ip", "in", "prompt=HA IP Address")
#param("ha_ip_mask", "ip", "in", "prompt=HA IP Mask")
#param("ha_vrrp_ip_address", "ip", "in", "prompt=HA VRRP IP Address")
#param("ha_group_vr_id", "int", "in", "min=2", "max=1024", "prompt=HA Group VR ID (1 is allocated to the interface VR)")

#param("data_interface_id", "int", "out")
#param("gateway_id", "int", "out")
#param("ha_interface_id", "int", "out")
#param("data_vlan", "int", "out")
#param("ha_vlan", "int", "out")

#if($data_port == $ha_port)
    #error("Data Port and HA Port must be on different Ports!!")
#end

#set($port = $adc.newBean('AgPortNewCfgTableEntry'))
#set($port.Indx = $data_port)
#set($port = $adc.read($port))
#if ($adc.isNull($port))
    ##Port was not found. not too realistic but if so raise an error
    #error("Port $data_port was not found!!")
#else
    #set($data_vlan = $port.PVID)
#end

#set($port = $adc.newBean('AgPortNewCfgTableEntry'))
#set($port.Indx = $ha_port)
#set($port = $adc.read($port))
#if ($adc.isNull($port))
    ##Port was not found. not too realistic but if so raise an error
    #error("Port $ha_port was not found!!")
#else
    #set($ha_vlan = $port.PVID)
#end

#set($Integer = 0)

#set($data_interface_string = "#get_interface_id($data_ip_address, 1)")
#set($data_interface_id = $Integer.parseInt($data_interface_string.trim()))
#create_interface($data_ip_address, $data_ip_mask, $data_vlan, $data_interface_id)

#set($gwb = $adc.newBean('/c/l3/gw'))
#set($gwb.addr = $gateway)
#set($gwb = $adc.findFirst($gwb))
#if ($adc.isNull($gwb))
    #set($gateway_id = $adc.getFreeIndexWithDefault('/c/l3/gw', 1))
#else
    #error("Gateway with address $gateway already exists on index $gwb.index")
#end

#if ($gateway_id < 5)
/c/l3/gw $gateway_id
	addr $gateway
    arp ena
	ena
#else
    #log('error', "The available gateway index $gatewayId cannot be used for a default gateway!")
    #error("No available index for a default gateway!")
#end

#if($ha_enabled)
    #set($ha_interface_string = "#get_interface_id($ha_ip_address, $data_interface_id)")
    #set($ha_interface_id = $Integer.parseInt($ha_interface_string.trim()))
    #create_interface($ha_ip_address, $ha_ip_mask, $ha_vlan, $ha_interface_id)

    /c/l3/vrrp/on
    /c/l3/vrrp/hotstan enabled

    /c/l3/vrrp/vr 1
        ena
        ipver v4
        vrid 1
        if $ha_interface_id
        addr $ha_vrrp_ip_address
        share dis

    /c/l3/vrrp/group
        ena
        ipver v4
        vrid $ha_group_vr_id
        if $ha_interface_id
        share dis

    /c/slb/port $data_port
        hotstan ena

    /c/slb/port $ha_port
        intersw ena
#else
    #set($ha_interface_id = 0)
#end

/c/slb
    on

/c/slb/port $data_port
    client ena
    server ena
    proxy ena

#macro(get_interface_id, $address, $default_index)
    #set($interface = $adc.newBean('/c/l3/if'))
    #set($interface.addr = $address)
    #set($interface = $adc.findFirst($interface))
    #if ($adc.isNull($interface))
        ## IP address not found
        #set($interface_id = $adc.getFreeIndexWithDefault('/c/l3/if', $default_index))
        $interface_id
    #else
       ## Found existing interface with this address
        #error("Found existing interface with address $address on index $interface.index!!")
    #end
#end

#macro(create_interface, $address, $mask, $vlan, $interface_id)
    /c/l3/if $interface_id
    addr $address
    mask $mask
    vlan $vlan
    ena
#end
