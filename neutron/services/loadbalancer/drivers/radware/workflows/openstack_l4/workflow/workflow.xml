<?xml version="1.0" ?>
<workflow createAction="init" deleteAction="teardown" name="openstack_l4" xmlns="http://www.radware.com/vdirect">
  <description>L4 Workflow for OpenStack LBaaS [2013-07-25 11:50:20.501000]</description>
  <persist>
    <parameters>
      <!-- The vDirect Service -->
      <parameter name="service" prompt="Radware vDirect ADC Service" type="adcService"/>
      <!-- Vip -->
      <parameter defaultValue="1.1.1.1" name="vip_address" prompt="VIP address" type="ip"/>
      <parameter defaultValue="80" name="vip_protocol_port" prompt="VIP port" type="int"/>
      <parameter defaultValue="HTTP" name="vip_protocol" prompt="VIP protocol" type="string" values="HTTP,HTTPS,TCP"/>
      <parameter defaultValue="10" name="vip_connection_limit" prompt="VIP connection limit" type="int"/>
      <parameter defaultValue="true" name="vip_admin_state_up" prompt="Is VIP enabled?" type="bool"/>
      <parameter defaultValue="SOURCE_IP" name="vip_session_persistence_type" prompt="VIP session persistence type" type="string" values="SOURCE_IP,HTTP_COOKIE,APP_COOKIE"/>
      <parameter defaultValue="none" name="vip_session_persistence_cookie_name" prompt="VIP session persistence cookie name" type="string"/>
      <!-- Pool -->
      <!-- pool_protocol is currently not used and expected to be the same as the vip_protocol-->
      <parameter defaultValue="HTTP" name="pool_protocol" prompt="Pool protocol" type="string" values="HTTP,HTTPS,TCP"/>
      <parameter defaultValue="ROUND_ROBIN" name="pool_lb_method" prompt="Pool LB method" type="string" values="ROUND_ROBIN,LEAST_CONNECTIONS,SOURCE_IP"/>
      <parameter defaultValue="true" name="pool_admin_state_up" prompt="Is Pool enabled?" type="bool"/>
      <!-- Members -->
      <parameter defaultValue="1.1.1.2" name="member_address_array" prompt="Members address array" type="ip[]"/>
      <parameter defaultValue="81" name="member_protocol_port_array" prompt="Members protocol port array" type="int[]"/>
      <parameter defaultValue="30" name="member_weight_array" prompt="Members weight array" type="int[]"/>
      <parameter defaultValue="true" name="member_admin_state_up_array" prompt="Are members enabled?" type="bool[]"/>
      <!-- Health Monitors -->
      <parameter defaultValue="none" name="hm_uuid_array" prompt="Health monitors UUID array" type="string[]"/>
      <parameter defaultValue="HTTP" name="hm_type_array" prompt="Health monitors type array" type="string[]" values="PING,TCP,HTTP,HTTPS"/>
      <parameter defaultValue="10" name="hm_delay_array" prompt="Health monitors delay array" type="int[]"/>
      <parameter defaultValue="20" name="hm_timeout_array" prompt="Health monitors timeout array" type="int[]"/>
      <parameter defaultValue="3" name="hm_max_retries_array" prompt="Health monitors max retries array" type="int[]"/>
      <parameter defaultValue="true" name="hm_admin_state_up_array" prompt="Health monitors admin state array" type="bool[]"/>
      <parameter defaultValue="/" name="hm_url_path_array" prompt="Health monitors url path array" type="string[]"/>
      <parameter defaultValue="GET" name="hm_http_method_array" prompt="Health monitors http method array" type="string[]"/>
      <parameter defaultValue="200" name="hm_expected_codes_array" prompt="Health monitor expected codes_array" type="string[]"/>
      <parameter defaultValue="save" name="apply_type" prompt="Device apply type" type="string" values="none,apply,save"/>
      <!-- Calculated -->
      <parameter name="ha_enabled" type="bool"/>
      <parameter name="need_new_values" type="bool"/>
      <parameter name="virt_id1" type="int"/>
      <parameter name="group_id1" type="int"/>
      <parameter name="new_values1" type="bool"/>
      <parameter name="real_server_ids1" type="int[]"/>
      <parameter name="virt_id2" type="int"/>
      <parameter name="group_id2" type="int"/>
      <parameter name="new_values2" type="bool"/>
      <parameter name="real_server_ids2" type="int[]"/>
      <parameter name="curr_hm_uuid_array" type="string[]"/>
      <parameter name="curr_hm_type_array" type="string[]"/>
      <parameter defaultValue="none" name="none_value" prompt="Constant for none" type="string" values="none"/>
      <!-- Calculated -->
    </parameters>
  </persist>
  <states>
    <state name="initialized"/>
    <state name="baseapplied"/>
    <state name="removed"/>
  </states>
  <actions>
    <action fromState="none" name="init" toState="initialized">
      <inputs>
        <parameters>
          <parameter name="service"/>
        </parameters>
      </inputs>
      <sequence>
        <log message="This may take time... making sure that the service is provisioned."/>
        <script file="wait_for_service.groovy" name="wait_for_service"/>
        <log message="Service is provisioned."/>
        <set saveAs="$ha_enabled" value="$service.request.ha"/>
      </sequence>
      <onError>
        <log message="Service is not ready!!"/>
      </onError>
    </action>
    <action fromState="initialized,baseapplied" name="BaseCreate" toState="baseapplied">
      <inputs>
        <parameters>
          <parameter name="vip_address"/>
          <parameter name="vip_protocol_port"/>
          <parameter name="vip_protocol"/>
          <parameter name="vip_connection_limit"/>
          <parameter name="vip_admin_state_up"/>
          <parameter name="vip_session_persistence_type"/>
          <parameter name="vip_session_persistence_cookie_name"/>
          <parameter name="pool_protocol"/>
          <parameter name="pool_lb_method"/>
          <parameter name="pool_admin_state_up"/>
          <parameter name="member_address_array"/>
          <parameter name="member_protocol_port_array"/>
          <parameter name="member_weight_array"/>
          <parameter name="member_admin_state_up_array"/>
          <parameter name="hm_uuid_array"/>
          <parameter name="hm_type_array"/>
          <parameter name="hm_delay_array"/>
          <parameter name="hm_timeout_array"/>
          <parameter name="hm_max_retries_array"/>
          <parameter name="hm_admin_state_up_array"/>
          <parameter name="hm_url_path_array"/>
          <parameter name="hm_http_method_array"/>
          <parameter name="hm_expected_codes_array"/>
        </parameters>
      </inputs>
      <devices>
        <device device="$service.primary" name="adc1"/>
        <device device="$service.secondary" if="$ha_enabled" name="adc2"/>
      </devices>
      <!--Handle the first time we run for all services-->
      <sequence ifState="initialized">
        <set saveAs="$need_new_values" value="true"/>
        <set saveAs="$none_value" value="'none'"/>
        <set saveAs="$real_server_ids1" value="[0]"/>
        <set saveAs="$real_server_ids2" value="[0]"/>
        <set saveAs="$curr_hm_uuid_array" value="['none']"/>
        <set saveAs="$curr_hm_type_array" value="['none']"/>
      </sequence>
      <!--Handle the need to allocated indexes if not allocated-->
      <sequence if="$need_new_values">
        <configuration file="openstack_init_indexes.vm" name="init_indexes_adc1">
          <parameterMapping>
            <map from="$adc1" to="$adc"/>
            <map from="$vip_address" to="$vip"/>
            <map from="$vip_protocol_port" to="$virtSvcPort"/>
            <!--  Outputs -->
            <map from="$group_id1" to="$groupId"/>
            <map from="$virt_id1" to="$virtId"/>
            <map from="$new_values1" to="$newValues"/>
          </parameterMapping>
        </configuration>
        <error if="!$new_values1" message="Service on vip $vip_address and port $vip_protocol_port already exists on device $adc1!"/>
        <configuration file="openstack_init_indexes.vm" if="$ha_enabled" name="init_indexes_adc2">
          <parameterMapping>
            <map from="$adc2" to="$adc"/>
            <map from="$vip_address" to="$vip"/>
            <map from="$vip_protocol_port" to="$virtSvcPort"/>
            <!--  Outputs -->
            <map from="$group_id2" to="$groupId"/>
            <map from="$virt_id2" to="$virtId"/>
            <map from="$new_values2" to="$newValues"/>
          </parameterMapping>
        </configuration>
        <error if="$ha_enabled &amp;&amp; !$new_values2" message="Service on vip $vip_address and port $vip_protocol_port already exists on device $adc2!"/>
        <set saveAs="$need_new_values" value="false"/>
      </sequence>
      <sequence>
        <configuration file="openstack_manage_l4.vm" name="manage_l4_adc1">
          <parameterMapping>
            <map from="$adc1" to="$adc"/>
            <map from="$group_id1" to="$groupId"/>
            <map from="$virt_id1" to="$virtId"/>
            <map from="$vip_admin_state_up" to="$virtServerEnabled"/>
            <map from="$vip_address" to="$vip"/>
            <map from="$vip_protocol_port" to="$virtSvcPort"/>
            <map from="$vip_protocol" to="$virtSvcType"/>
            <map from="$pool_lb_method" to="$svcPortAlgorithm"/>
            <map from="$pool_admin_state_up" to="$groupEnabled"/>
            <map from="$vip_session_persistence_type" to="$virtSvcPersistMethod"/>
            <map from="$vip_session_persistence_cookie_name" to="$virtSvcCookieName"/>
          </parameterMapping>
        </configuration>
        <configuration file="openstack_manage_l4.vm" if="$ha_enabled" name="manage_l4_adc2">
          <parameterMapping>
            <map from="$adc2" to="$adc"/>
            <map from="$group_id2" to="$groupId"/>
            <map from="$virt_id2" to="$virtId"/>
            <map from="$vip_admin_state_up" to="$virtServerEnabled"/>
            <map from="$vip_address" to="$vip"/>
            <map from="$vip_protocol_port" to="$virtSvcPort"/>
            <map from="$vip_protocol" to="$virtSvcType"/>
            <map from="$pool_lb_method" to="$svcPortAlgorithm"/>
            <map from="$pool_admin_state_up" to="$groupEnabled"/>
            <map from="$vip_session_persistence_type" to="$virtSvcPersistMethod"/>
            <map from="$vip_session_persistence_cookie_name" to="$virtSvcCookieName"/>
          </parameterMapping>
        </configuration>
        <configuration file="openstack_manage_rips.vm" name="manage_rips_adc1">
          <parameterMapping>
            <map from="$adc1" to="$adc"/>
            <map from="$group_id1" to="$groupId"/>
            <map from="$real_server_ids1" to="$curRealServerIds"/>
            <map from="$member_address_array" to="$memberIps"/>
            <map from="$member_weight_array" to="$memberWeights"/>
            <map from="$member_protocol_port_array" to="$memberPorts"/>
            <map from="$member_admin_state_up_array" to="$memberAdminStates"/>
            <!--output parameters-->
            <map from="$real_server_ids1" to="$realServerIds"/>
          </parameterMapping>
        </configuration>
        <configuration file="openstack_manage_rips.vm" if="$ha_enabled" name="manage_rips_adc2">
          <parameterMapping>
            <map from="$adc2" to="$adc"/>
            <map from="$group_id2" to="$groupId"/>
            <map from="$real_server_ids2" to="$curRealServerIds"/>
            <map from="$member_address_array" to="$memberIps"/>
            <map from="$member_weight_array" to="$memberWeights"/>
            <map from="$member_protocol_port_array" to="$memberPorts"/>
            <map from="$member_admin_state_up_array" to="$memberAdminStates"/>
            <!--output parameters-->
            <map from="$real_server_ids2" to="$realServerIds"/>
          </parameterMapping>
        </configuration>
        <configuration file="openstack_manage_hcs.vm" name="manage_hcs_adc1">
          <parameterMapping>
            <map from="$adc1" to="$adc"/>
            <map from="$group_id1" to="$group_id"/>
          </parameterMapping>
        </configuration>
        <configuration file="openstack_manage_hcs.vm" if="$ha_enabled"  name="manage_hcs_adc2">
          <parameterMapping>
            <map from="$adc2" to="$adc"/>
            <map from="$group_id2" to="$group_id"/>
          </parameterMapping>
        </configuration>
      </sequence>
      <!--Now commit to the device-->
      <sequence>
        <commit apply="$apply_type != 'none'" save="$apply_type == 'save'"/>
        <set saveAs="$curr_hm_uuid_array" value="$hm_uuid_array"/>
        <set saveAs="$curr_hm_type_array" value="$hm_type_array"/>
      </sequence>
      <onError>
        <autoRevert/>
      </onError>
    </action>
    <action name="teardown" toState="removed">
      <devices>
        <device device="$service.primary" name="adc1"/>
        <device device="$service.secondary" if="$ha_enabled" name="adc2"/>
      </devices>
      <!--handle when service was defined-->
      <sequence if="!$need_new_values">
        <configuration file="openstack_teardown_l4.vm" name="teardown_adc1">
          <parameterMapping>
            <map from="$adc1" to="$adc"/>
            <map from="$virt_id1" to="$virtId"/>
            <map from="$group_id1" to="$groupId"/>
            <map from="$real_server_ids1" to="$curRealServerIds"/>
          </parameterMapping>
        </configuration>
        <configuration file="openstack_teardown_l4.vm" if="$ha_enabled" name="teardown_adc2">
          <parameterMapping>
            <map from="$adc2" to="$adc"/>
            <map from="$virt_id2" to="$virtId"/>
            <map from="$group_id2" to="$groupId"/>
            <map from="$real_server_ids2" to="$curRealServerIds"/>
          </parameterMapping>
        </configuration>
      </sequence>
      <!--Now commit to the device-->
      <sequence>
        <commit apply="$apply_type != 'none'" save="$apply_type == 'save'"/>
      </sequence>
      <onError>
        <autoRevert/>
      </onError>
    </action>
  </actions>
</workflow>
